# Copyright (C) 2009 Anand Patil
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os
import sys
import subprocess
import matplotlib
import IPython
import generic_mbg
from generic_mbg.matplotlibrc import matplotlibrc
from generic_mbg.ipythonrc import ipythonrc

# Create option parser
req_doc = """

mbg-init-user-account  Copyright (C) 2009 Anand Patil
This program comes with ABSOLUTELY NO WARRANTY.
This is free software, and you are welcome to redistribute it under certain conditions.
See <http://www.gnu.org/licenses/> for the terms of the license.


  Arguments are the module names and URL's, for example
  
  mbg-init-user-account duffy git://github.com/malaria-atlas-project/duffy.git
                        mbg-world git://github.com/malaria-atlas-project/mbg-world.git
                        
  These will be checked out and installed locally.
"""

if len(sys.argv)>0:
    mod_urls = sys.argv[2::2]
    mod_names = sys.argv[1::2]

def get_syscall_output(str):
    process = subprocess.Popen(str, stdout=subprocess.PIPE, shell=True)
    os.waitpid(process.pid, 0)
    return process.stdout.read().strip()

user = get_syscall_output('whoami')
osname = os.uname()[0]
if osname not in ['Darwin','Linux']:
    raise ValueError, 'Operating system type %s is not supported by this script, good luck.'
    
if osname == 'Darwin':
    prefix='/Users/%s'%user
else:
    prefix='/home/%s'%user

# Make directories
print 'Creating directories'
os.chdir(prefix)
for dirname in ['code','bin','python2.6','python2.6/site-packages']:
    print '\t'+dirname
    os.mkdir(dirname)

# Check requested modules out and install them.
print 'Installing requested modules'
if len(mod_urls)>0:    
    os.chdir(os.path.join(prefix,code))
    for (name,url) in zip(mod_names,mod_urls):
        print '\tGetting %s from %s'%(name,url)
        os.system('git clone %s'%url)
        os.chdir(name)
        print '\tInstalling to ~/python2.6/site-packages'
        os.system('python setup.py develop --install-dir=%s'%os.path.join(prefix,'python2.6/site-packages'))
        os.chdir('..')
    
# Write rc files
if osname=='Darwin':
    rcfile=file(os.path.join(prefix,'.Profile'),'a')
else:
    rcfile=file(os.path.join(prefix,'.bashrc'),'a')
print 'Writing extra information to RC file'
rcfile.write("""

export OMP_NUM_THREADS=8
export PYTHONPATH=~/python2.6/site-packages:PYTHONPATH
export PATH=~/bin:PATH""")

if osname=='Darwin':
    rcfile.write("""
export CFLAGS="-arch i386 -arch x86_64"
export FFLAGS="-arch i386 -arch x86_64"
export LDFLAGS="-Wall -undefined dynamic_lookup -bundle -arch i386 -arch x86_64"
export MACOSX_DEPLOYMENT_TARGET=10.6""")

# Write matplotlib and ipython configuration files
print 'Writing matplotlibrc and ipythonrc files'
file(os.path.join(prefix,'.matplotlib/matplotlibrc')).write(matplotlibrc)
file(os.path.join(prefix,'.ipython/ipythonrc')).write(ipythonrc)